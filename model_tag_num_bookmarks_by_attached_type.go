/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TagNumBookmarksByAttachedType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagNumBookmarksByAttachedType{}

// TagNumBookmarksByAttachedType struct for TagNumBookmarksByAttachedType
type TagNumBookmarksByAttachedType struct {
	Ai    *float32 `json:"ai,omitempty"`
	Human *float32 `json:"human,omitempty"`
}

// NewTagNumBookmarksByAttachedType instantiates a new TagNumBookmarksByAttachedType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagNumBookmarksByAttachedType() *TagNumBookmarksByAttachedType {
	this := TagNumBookmarksByAttachedType{}
	return &this
}

// NewTagNumBookmarksByAttachedTypeWithDefaults instantiates a new TagNumBookmarksByAttachedType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagNumBookmarksByAttachedTypeWithDefaults() *TagNumBookmarksByAttachedType {
	this := TagNumBookmarksByAttachedType{}
	return &this
}

// GetAi returns the Ai field value if set, zero value otherwise.
func (o *TagNumBookmarksByAttachedType) GetAi() float32 {
	if o == nil || IsNil(o.Ai) {
		var ret float32
		return ret
	}
	return *o.Ai
}

// GetAiOk returns a tuple with the Ai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagNumBookmarksByAttachedType) GetAiOk() (*float32, bool) {
	if o == nil || IsNil(o.Ai) {
		return nil, false
	}
	return o.Ai, true
}

// HasAi returns a boolean if a field has been set.
func (o *TagNumBookmarksByAttachedType) HasAi() bool {
	if o != nil && !IsNil(o.Ai) {
		return true
	}

	return false
}

// SetAi gets a reference to the given float32 and assigns it to the Ai field.
func (o *TagNumBookmarksByAttachedType) SetAi(v float32) {
	o.Ai = &v
}

// GetHuman returns the Human field value if set, zero value otherwise.
func (o *TagNumBookmarksByAttachedType) GetHuman() float32 {
	if o == nil || IsNil(o.Human) {
		var ret float32
		return ret
	}
	return *o.Human
}

// GetHumanOk returns a tuple with the Human field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagNumBookmarksByAttachedType) GetHumanOk() (*float32, bool) {
	if o == nil || IsNil(o.Human) {
		return nil, false
	}
	return o.Human, true
}

// HasHuman returns a boolean if a field has been set.
func (o *TagNumBookmarksByAttachedType) HasHuman() bool {
	if o != nil && !IsNil(o.Human) {
		return true
	}

	return false
}

// SetHuman gets a reference to the given float32 and assigns it to the Human field.
func (o *TagNumBookmarksByAttachedType) SetHuman(v float32) {
	o.Human = &v
}

func (o TagNumBookmarksByAttachedType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagNumBookmarksByAttachedType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ai) {
		toSerialize["ai"] = o.Ai
	}
	if !IsNil(o.Human) {
		toSerialize["human"] = o.Human
	}
	return toSerialize, nil
}

type NullableTagNumBookmarksByAttachedType struct {
	value *TagNumBookmarksByAttachedType
	isSet bool
}

func (v NullableTagNumBookmarksByAttachedType) Get() *TagNumBookmarksByAttachedType {
	return v.value
}

func (v *NullableTagNumBookmarksByAttachedType) Set(val *TagNumBookmarksByAttachedType) {
	v.value = val
	v.isSet = true
}

func (v NullableTagNumBookmarksByAttachedType) IsSet() bool {
	return v.isSet
}

func (v *NullableTagNumBookmarksByAttachedType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagNumBookmarksByAttachedType(val *TagNumBookmarksByAttachedType) *NullableTagNumBookmarksByAttachedType {
	return &NullableTagNumBookmarksByAttachedType{value: val, isSet: true}
}

func (v NullableTagNumBookmarksByAttachedType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagNumBookmarksByAttachedType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
