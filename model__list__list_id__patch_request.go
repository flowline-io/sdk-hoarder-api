/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListListIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListListIdPatchRequest{}

// ListListIdPatchRequest struct for ListListIdPatchRequest
type ListListIdPatchRequest struct {
	Name     *string        `json:"name,omitempty"`
	Icon     *string        `json:"icon,omitempty"`
	ParentId NullableString `json:"parentId,omitempty"`
}

// NewListListIdPatchRequest instantiates a new ListListIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListListIdPatchRequest() *ListListIdPatchRequest {
	this := ListListIdPatchRequest{}
	return &this
}

// NewListListIdPatchRequestWithDefaults instantiates a new ListListIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListListIdPatchRequestWithDefaults() *ListListIdPatchRequest {
	this := ListListIdPatchRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListListIdPatchRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListListIdPatchRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListListIdPatchRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListListIdPatchRequest) SetName(v string) {
	o.Name = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *ListListIdPatchRequest) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListListIdPatchRequest) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *ListListIdPatchRequest) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *ListListIdPatchRequest) SetIcon(v string) {
	o.Icon = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListListIdPatchRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListListIdPatchRequest) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ListListIdPatchRequest) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *ListListIdPatchRequest) SetParentId(v string) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ListListIdPatchRequest) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ListListIdPatchRequest) UnsetParentId() {
	o.ParentId.Unset()
}

func (o ListListIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListListIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	return toSerialize, nil
}

type NullableListListIdPatchRequest struct {
	value *ListListIdPatchRequest
	isSet bool
}

func (v NullableListListIdPatchRequest) Get() *ListListIdPatchRequest {
	return v.value
}

func (v *NullableListListIdPatchRequest) Set(val *ListListIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListListIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListListIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListListIdPatchRequest(val *ListListIdPatchRequest) *NullableListListIdPatchRequest {
	return &NullableListListIdPatchRequest{value: val, isSet: true}
}

func (v NullableListListIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListListIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
