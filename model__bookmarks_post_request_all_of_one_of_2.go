/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BookmarksPostRequestAllOfOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarksPostRequestAllOfOneOf2{}

// BookmarksPostRequestAllOfOneOf2 struct for BookmarksPostRequestAllOfOneOf2
type BookmarksPostRequestAllOfOneOf2 struct {
	Type      string  `json:"type"`
	AssetType string  `json:"assetType"`
	AssetId   string  `json:"assetId"`
	FileName  *string `json:"fileName,omitempty"`
	SourceUrl *string `json:"sourceUrl,omitempty"`
}

type _BookmarksPostRequestAllOfOneOf2 BookmarksPostRequestAllOfOneOf2

// NewBookmarksPostRequestAllOfOneOf2 instantiates a new BookmarksPostRequestAllOfOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarksPostRequestAllOfOneOf2(type_ string, assetType string, assetId string) *BookmarksPostRequestAllOfOneOf2 {
	this := BookmarksPostRequestAllOfOneOf2{}
	this.Type = type_
	this.AssetType = assetType
	this.AssetId = assetId
	return &this
}

// NewBookmarksPostRequestAllOfOneOf2WithDefaults instantiates a new BookmarksPostRequestAllOfOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarksPostRequestAllOfOneOf2WithDefaults() *BookmarksPostRequestAllOfOneOf2 {
	this := BookmarksPostRequestAllOfOneOf2{}
	return &this
}

// GetType returns the Type field value
func (o *BookmarksPostRequestAllOfOneOf2) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf2) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BookmarksPostRequestAllOfOneOf2) SetType(v string) {
	o.Type = v
}

// GetAssetType returns the AssetType field value
func (o *BookmarksPostRequestAllOfOneOf2) GetAssetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf2) GetAssetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *BookmarksPostRequestAllOfOneOf2) SetAssetType(v string) {
	o.AssetType = v
}

// GetAssetId returns the AssetId field value
func (o *BookmarksPostRequestAllOfOneOf2) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf2) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *BookmarksPostRequestAllOfOneOf2) SetAssetId(v string) {
	o.AssetId = v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *BookmarksPostRequestAllOfOneOf2) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf2) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *BookmarksPostRequestAllOfOneOf2) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *BookmarksPostRequestAllOfOneOf2) SetFileName(v string) {
	o.FileName = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *BookmarksPostRequestAllOfOneOf2) GetSourceUrl() string {
	if o == nil || IsNil(o.SourceUrl) {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf2) GetSourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUrl) {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *BookmarksPostRequestAllOfOneOf2) HasSourceUrl() bool {
	if o != nil && !IsNil(o.SourceUrl) {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *BookmarksPostRequestAllOfOneOf2) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

func (o BookmarksPostRequestAllOfOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarksPostRequestAllOfOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["assetType"] = o.AssetType
	toSerialize["assetId"] = o.AssetId
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.SourceUrl) {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	return toSerialize, nil
}

func (o *BookmarksPostRequestAllOfOneOf2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"assetType",
		"assetId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookmarksPostRequestAllOfOneOf2 := _BookmarksPostRequestAllOfOneOf2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookmarksPostRequestAllOfOneOf2)

	if err != nil {
		return err
	}

	*o = BookmarksPostRequestAllOfOneOf2(varBookmarksPostRequestAllOfOneOf2)

	return err
}

type NullableBookmarksPostRequestAllOfOneOf2 struct {
	value *BookmarksPostRequestAllOfOneOf2
	isSet bool
}

func (v NullableBookmarksPostRequestAllOfOneOf2) Get() *BookmarksPostRequestAllOfOneOf2 {
	return v.value
}

func (v *NullableBookmarksPostRequestAllOfOneOf2) Set(val *BookmarksPostRequestAllOfOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarksPostRequestAllOfOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarksPostRequestAllOfOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarksPostRequestAllOfOneOf2(val *BookmarksPostRequestAllOfOneOf2) *NullableBookmarksPostRequestAllOfOneOf2 {
	return &NullableBookmarksPostRequestAllOfOneOf2{value: val, isSet: true}
}

func (v NullableBookmarksPostRequestAllOfOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarksPostRequestAllOfOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
