/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookmarksBookmarkIdHighlightsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarksBookmarkIdHighlightsGet200Response{}

// BookmarksBookmarkIdHighlightsGet200Response struct for BookmarksBookmarkIdHighlightsGet200Response
type BookmarksBookmarkIdHighlightsGet200Response struct {
	Highlights []Highlight `json:"highlights"`
}

type _BookmarksBookmarkIdHighlightsGet200Response BookmarksBookmarkIdHighlightsGet200Response

// NewBookmarksBookmarkIdHighlightsGet200Response instantiates a new BookmarksBookmarkIdHighlightsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarksBookmarkIdHighlightsGet200Response(highlights []Highlight) *BookmarksBookmarkIdHighlightsGet200Response {
	this := BookmarksBookmarkIdHighlightsGet200Response{}
	this.Highlights = highlights
	return &this
}

// NewBookmarksBookmarkIdHighlightsGet200ResponseWithDefaults instantiates a new BookmarksBookmarkIdHighlightsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarksBookmarkIdHighlightsGet200ResponseWithDefaults() *BookmarksBookmarkIdHighlightsGet200Response {
	this := BookmarksBookmarkIdHighlightsGet200Response{}
	return &this
}

// GetHighlights returns the Highlights field value
func (o *BookmarksBookmarkIdHighlightsGet200Response) GetHighlights() []Highlight {
	if o == nil {
		var ret []Highlight
		return ret
	}

	return o.Highlights
}

// GetHighlightsOk returns a tuple with the Highlights field value
// and a boolean to check if the value has been set.
func (o *BookmarksBookmarkIdHighlightsGet200Response) GetHighlightsOk() ([]Highlight, bool) {
	if o == nil {
		return nil, false
	}
	return o.Highlights, true
}

// SetHighlights sets field value
func (o *BookmarksBookmarkIdHighlightsGet200Response) SetHighlights(v []Highlight) {
	o.Highlights = v
}

func (o BookmarksBookmarkIdHighlightsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarksBookmarkIdHighlightsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["highlights"] = o.Highlights
	return toSerialize, nil
}

func (o *BookmarksBookmarkIdHighlightsGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"highlights",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookmarksBookmarkIdHighlightsGet200Response := _BookmarksBookmarkIdHighlightsGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookmarksBookmarkIdHighlightsGet200Response)

	if err != nil {
		return err
	}

	*o = BookmarksBookmarkIdHighlightsGet200Response(varBookmarksBookmarkIdHighlightsGet200Response)

	return err
}

type NullableBookmarksBookmarkIdHighlightsGet200Response struct {
	value *BookmarksBookmarkIdHighlightsGet200Response
	isSet bool
}

func (v NullableBookmarksBookmarkIdHighlightsGet200Response) Get() *BookmarksBookmarkIdHighlightsGet200Response {
	return v.value
}

func (v *NullableBookmarksBookmarkIdHighlightsGet200Response) Set(val *BookmarksBookmarkIdHighlightsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarksBookmarkIdHighlightsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarksBookmarkIdHighlightsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarksBookmarkIdHighlightsGet200Response(val *BookmarksBookmarkIdHighlightsGet200Response) *NullableBookmarksBookmarkIdHighlightsGet200Response {
	return &NullableBookmarksBookmarkIdHighlightsGet200Response{value: val, isSet: true}
}

func (v NullableBookmarksBookmarkIdHighlightsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarksBookmarkIdHighlightsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


