/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookmarkContentOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarkContentOneOf{}

// BookmarkContentOneOf struct for BookmarkContentOneOf
type BookmarkContentOneOf struct {
	Type string `json:"type"`
	Url string `json:"url"`
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ImageUrl NullableString `json:"imageUrl,omitempty"`
	ImageAssetId NullableString `json:"imageAssetId,omitempty"`
	ScreenshotAssetId NullableString `json:"screenshotAssetId,omitempty"`
	FullPageArchiveAssetId NullableString `json:"fullPageArchiveAssetId,omitempty"`
	PrecrawledArchiveAssetId NullableString `json:"precrawledArchiveAssetId,omitempty"`
	VideoAssetId NullableString `json:"videoAssetId,omitempty"`
	Favicon NullableString `json:"favicon,omitempty"`
	HtmlContent NullableString `json:"htmlContent,omitempty"`
	CrawledAt NullableString `json:"crawledAt,omitempty"`
}

type _BookmarkContentOneOf BookmarkContentOneOf

// NewBookmarkContentOneOf instantiates a new BookmarkContentOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarkContentOneOf(type_ string, url string) *BookmarkContentOneOf {
	this := BookmarkContentOneOf{}
	this.Type = type_
	this.Url = url
	return &this
}

// NewBookmarkContentOneOfWithDefaults instantiates a new BookmarkContentOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarkContentOneOfWithDefaults() *BookmarkContentOneOf {
	this := BookmarkContentOneOf{}
	return &this
}

// GetType returns the Type field value
func (o *BookmarkContentOneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BookmarkContentOneOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BookmarkContentOneOf) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *BookmarkContentOneOf) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *BookmarkContentOneOf) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *BookmarkContentOneOf) SetUrl(v string) {
	o.Url = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *BookmarkContentOneOf) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *BookmarkContentOneOf) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BookmarkContentOneOf) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BookmarkContentOneOf) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetDescription() {
	o.Description.Unset()
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageUrl.Get()
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageUrl.Get(), o.ImageUrl.IsSet()
}

// HasImageUrl returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasImageUrl() bool {
	if o != nil && o.ImageUrl.IsSet() {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given NullableString and assigns it to the ImageUrl field.
func (o *BookmarkContentOneOf) SetImageUrl(v string) {
	o.ImageUrl.Set(&v)
}
// SetImageUrlNil sets the value for ImageUrl to be an explicit nil
func (o *BookmarkContentOneOf) SetImageUrlNil() {
	o.ImageUrl.Set(nil)
}

// UnsetImageUrl ensures that no value is present for ImageUrl, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetImageUrl() {
	o.ImageUrl.Unset()
}

// GetImageAssetId returns the ImageAssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetImageAssetId() string {
	if o == nil || IsNil(o.ImageAssetId.Get()) {
		var ret string
		return ret
	}
	return *o.ImageAssetId.Get()
}

// GetImageAssetIdOk returns a tuple with the ImageAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetImageAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageAssetId.Get(), o.ImageAssetId.IsSet()
}

// HasImageAssetId returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasImageAssetId() bool {
	if o != nil && o.ImageAssetId.IsSet() {
		return true
	}

	return false
}

// SetImageAssetId gets a reference to the given NullableString and assigns it to the ImageAssetId field.
func (o *BookmarkContentOneOf) SetImageAssetId(v string) {
	o.ImageAssetId.Set(&v)
}
// SetImageAssetIdNil sets the value for ImageAssetId to be an explicit nil
func (o *BookmarkContentOneOf) SetImageAssetIdNil() {
	o.ImageAssetId.Set(nil)
}

// UnsetImageAssetId ensures that no value is present for ImageAssetId, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetImageAssetId() {
	o.ImageAssetId.Unset()
}

// GetScreenshotAssetId returns the ScreenshotAssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetScreenshotAssetId() string {
	if o == nil || IsNil(o.ScreenshotAssetId.Get()) {
		var ret string
		return ret
	}
	return *o.ScreenshotAssetId.Get()
}

// GetScreenshotAssetIdOk returns a tuple with the ScreenshotAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetScreenshotAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScreenshotAssetId.Get(), o.ScreenshotAssetId.IsSet()
}

// HasScreenshotAssetId returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasScreenshotAssetId() bool {
	if o != nil && o.ScreenshotAssetId.IsSet() {
		return true
	}

	return false
}

// SetScreenshotAssetId gets a reference to the given NullableString and assigns it to the ScreenshotAssetId field.
func (o *BookmarkContentOneOf) SetScreenshotAssetId(v string) {
	o.ScreenshotAssetId.Set(&v)
}
// SetScreenshotAssetIdNil sets the value for ScreenshotAssetId to be an explicit nil
func (o *BookmarkContentOneOf) SetScreenshotAssetIdNil() {
	o.ScreenshotAssetId.Set(nil)
}

// UnsetScreenshotAssetId ensures that no value is present for ScreenshotAssetId, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetScreenshotAssetId() {
	o.ScreenshotAssetId.Unset()
}

// GetFullPageArchiveAssetId returns the FullPageArchiveAssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetFullPageArchiveAssetId() string {
	if o == nil || IsNil(o.FullPageArchiveAssetId.Get()) {
		var ret string
		return ret
	}
	return *o.FullPageArchiveAssetId.Get()
}

// GetFullPageArchiveAssetIdOk returns a tuple with the FullPageArchiveAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetFullPageArchiveAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullPageArchiveAssetId.Get(), o.FullPageArchiveAssetId.IsSet()
}

// HasFullPageArchiveAssetId returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasFullPageArchiveAssetId() bool {
	if o != nil && o.FullPageArchiveAssetId.IsSet() {
		return true
	}

	return false
}

// SetFullPageArchiveAssetId gets a reference to the given NullableString and assigns it to the FullPageArchiveAssetId field.
func (o *BookmarkContentOneOf) SetFullPageArchiveAssetId(v string) {
	o.FullPageArchiveAssetId.Set(&v)
}
// SetFullPageArchiveAssetIdNil sets the value for FullPageArchiveAssetId to be an explicit nil
func (o *BookmarkContentOneOf) SetFullPageArchiveAssetIdNil() {
	o.FullPageArchiveAssetId.Set(nil)
}

// UnsetFullPageArchiveAssetId ensures that no value is present for FullPageArchiveAssetId, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetFullPageArchiveAssetId() {
	o.FullPageArchiveAssetId.Unset()
}

// GetPrecrawledArchiveAssetId returns the PrecrawledArchiveAssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetPrecrawledArchiveAssetId() string {
	if o == nil || IsNil(o.PrecrawledArchiveAssetId.Get()) {
		var ret string
		return ret
	}
	return *o.PrecrawledArchiveAssetId.Get()
}

// GetPrecrawledArchiveAssetIdOk returns a tuple with the PrecrawledArchiveAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetPrecrawledArchiveAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrecrawledArchiveAssetId.Get(), o.PrecrawledArchiveAssetId.IsSet()
}

// HasPrecrawledArchiveAssetId returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasPrecrawledArchiveAssetId() bool {
	if o != nil && o.PrecrawledArchiveAssetId.IsSet() {
		return true
	}

	return false
}

// SetPrecrawledArchiveAssetId gets a reference to the given NullableString and assigns it to the PrecrawledArchiveAssetId field.
func (o *BookmarkContentOneOf) SetPrecrawledArchiveAssetId(v string) {
	o.PrecrawledArchiveAssetId.Set(&v)
}
// SetPrecrawledArchiveAssetIdNil sets the value for PrecrawledArchiveAssetId to be an explicit nil
func (o *BookmarkContentOneOf) SetPrecrawledArchiveAssetIdNil() {
	o.PrecrawledArchiveAssetId.Set(nil)
}

// UnsetPrecrawledArchiveAssetId ensures that no value is present for PrecrawledArchiveAssetId, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetPrecrawledArchiveAssetId() {
	o.PrecrawledArchiveAssetId.Unset()
}

// GetVideoAssetId returns the VideoAssetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetVideoAssetId() string {
	if o == nil || IsNil(o.VideoAssetId.Get()) {
		var ret string
		return ret
	}
	return *o.VideoAssetId.Get()
}

// GetVideoAssetIdOk returns a tuple with the VideoAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetVideoAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoAssetId.Get(), o.VideoAssetId.IsSet()
}

// HasVideoAssetId returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasVideoAssetId() bool {
	if o != nil && o.VideoAssetId.IsSet() {
		return true
	}

	return false
}

// SetVideoAssetId gets a reference to the given NullableString and assigns it to the VideoAssetId field.
func (o *BookmarkContentOneOf) SetVideoAssetId(v string) {
	o.VideoAssetId.Set(&v)
}
// SetVideoAssetIdNil sets the value for VideoAssetId to be an explicit nil
func (o *BookmarkContentOneOf) SetVideoAssetIdNil() {
	o.VideoAssetId.Set(nil)
}

// UnsetVideoAssetId ensures that no value is present for VideoAssetId, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetVideoAssetId() {
	o.VideoAssetId.Unset()
}

// GetFavicon returns the Favicon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetFavicon() string {
	if o == nil || IsNil(o.Favicon.Get()) {
		var ret string
		return ret
	}
	return *o.Favicon.Get()
}

// GetFaviconOk returns a tuple with the Favicon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetFaviconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Favicon.Get(), o.Favicon.IsSet()
}

// HasFavicon returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasFavicon() bool {
	if o != nil && o.Favicon.IsSet() {
		return true
	}

	return false
}

// SetFavicon gets a reference to the given NullableString and assigns it to the Favicon field.
func (o *BookmarkContentOneOf) SetFavicon(v string) {
	o.Favicon.Set(&v)
}
// SetFaviconNil sets the value for Favicon to be an explicit nil
func (o *BookmarkContentOneOf) SetFaviconNil() {
	o.Favicon.Set(nil)
}

// UnsetFavicon ensures that no value is present for Favicon, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetFavicon() {
	o.Favicon.Unset()
}

// GetHtmlContent returns the HtmlContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetHtmlContent() string {
	if o == nil || IsNil(o.HtmlContent.Get()) {
		var ret string
		return ret
	}
	return *o.HtmlContent.Get()
}

// GetHtmlContentOk returns a tuple with the HtmlContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetHtmlContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlContent.Get(), o.HtmlContent.IsSet()
}

// HasHtmlContent returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasHtmlContent() bool {
	if o != nil && o.HtmlContent.IsSet() {
		return true
	}

	return false
}

// SetHtmlContent gets a reference to the given NullableString and assigns it to the HtmlContent field.
func (o *BookmarkContentOneOf) SetHtmlContent(v string) {
	o.HtmlContent.Set(&v)
}
// SetHtmlContentNil sets the value for HtmlContent to be an explicit nil
func (o *BookmarkContentOneOf) SetHtmlContentNil() {
	o.HtmlContent.Set(nil)
}

// UnsetHtmlContent ensures that no value is present for HtmlContent, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetHtmlContent() {
	o.HtmlContent.Unset()
}

// GetCrawledAt returns the CrawledAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BookmarkContentOneOf) GetCrawledAt() string {
	if o == nil || IsNil(o.CrawledAt.Get()) {
		var ret string
		return ret
	}
	return *o.CrawledAt.Get()
}

// GetCrawledAtOk returns a tuple with the CrawledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BookmarkContentOneOf) GetCrawledAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrawledAt.Get(), o.CrawledAt.IsSet()
}

// HasCrawledAt returns a boolean if a field has been set.
func (o *BookmarkContentOneOf) HasCrawledAt() bool {
	if o != nil && o.CrawledAt.IsSet() {
		return true
	}

	return false
}

// SetCrawledAt gets a reference to the given NullableString and assigns it to the CrawledAt field.
func (o *BookmarkContentOneOf) SetCrawledAt(v string) {
	o.CrawledAt.Set(&v)
}
// SetCrawledAtNil sets the value for CrawledAt to be an explicit nil
func (o *BookmarkContentOneOf) SetCrawledAtNil() {
	o.CrawledAt.Set(nil)
}

// UnsetCrawledAt ensures that no value is present for CrawledAt, not even an explicit nil
func (o *BookmarkContentOneOf) UnsetCrawledAt() {
	o.CrawledAt.Unset()
}

func (o BookmarkContentOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarkContentOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ImageUrl.IsSet() {
		toSerialize["imageUrl"] = o.ImageUrl.Get()
	}
	if o.ImageAssetId.IsSet() {
		toSerialize["imageAssetId"] = o.ImageAssetId.Get()
	}
	if o.ScreenshotAssetId.IsSet() {
		toSerialize["screenshotAssetId"] = o.ScreenshotAssetId.Get()
	}
	if o.FullPageArchiveAssetId.IsSet() {
		toSerialize["fullPageArchiveAssetId"] = o.FullPageArchiveAssetId.Get()
	}
	if o.PrecrawledArchiveAssetId.IsSet() {
		toSerialize["precrawledArchiveAssetId"] = o.PrecrawledArchiveAssetId.Get()
	}
	if o.VideoAssetId.IsSet() {
		toSerialize["videoAssetId"] = o.VideoAssetId.Get()
	}
	if o.Favicon.IsSet() {
		toSerialize["favicon"] = o.Favicon.Get()
	}
	if o.HtmlContent.IsSet() {
		toSerialize["htmlContent"] = o.HtmlContent.Get()
	}
	if o.CrawledAt.IsSet() {
		toSerialize["crawledAt"] = o.CrawledAt.Get()
	}
	return toSerialize, nil
}

func (o *BookmarkContentOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookmarkContentOneOf := _BookmarkContentOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookmarkContentOneOf)

	if err != nil {
		return err
	}

	*o = BookmarkContentOneOf(varBookmarkContentOneOf)

	return err
}

type NullableBookmarkContentOneOf struct {
	value *BookmarkContentOneOf
	isSet bool
}

func (v NullableBookmarkContentOneOf) Get() *BookmarkContentOneOf {
	return v.value
}

func (v *NullableBookmarkContentOneOf) Set(val *BookmarkContentOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarkContentOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarkContentOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarkContentOneOf(val *BookmarkContentOneOf) *NullableBookmarkContentOneOf {
	return &NullableBookmarkContentOneOf{value: val, isSet: true}
}

func (v NullableBookmarkContentOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarkContentOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


