/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookmarksPostRequestAllOfOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarksPostRequestAllOfOneOf1{}

// BookmarksPostRequestAllOfOneOf1 struct for BookmarksPostRequestAllOfOneOf1
type BookmarksPostRequestAllOfOneOf1 struct {
	Type string `json:"type"`
	Text string `json:"text"`
	SourceUrl *string `json:"sourceUrl,omitempty"`
}

type _BookmarksPostRequestAllOfOneOf1 BookmarksPostRequestAllOfOneOf1

// NewBookmarksPostRequestAllOfOneOf1 instantiates a new BookmarksPostRequestAllOfOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarksPostRequestAllOfOneOf1(type_ string, text string) *BookmarksPostRequestAllOfOneOf1 {
	this := BookmarksPostRequestAllOfOneOf1{}
	this.Type = type_
	this.Text = text
	return &this
}

// NewBookmarksPostRequestAllOfOneOf1WithDefaults instantiates a new BookmarksPostRequestAllOfOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarksPostRequestAllOfOneOf1WithDefaults() *BookmarksPostRequestAllOfOneOf1 {
	this := BookmarksPostRequestAllOfOneOf1{}
	return &this
}

// GetType returns the Type field value
func (o *BookmarksPostRequestAllOfOneOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BookmarksPostRequestAllOfOneOf1) SetType(v string) {
	o.Type = v
}

// GetText returns the Text field value
func (o *BookmarksPostRequestAllOfOneOf1) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf1) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *BookmarksPostRequestAllOfOneOf1) SetText(v string) {
	o.Text = v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *BookmarksPostRequestAllOfOneOf1) GetSourceUrl() string {
	if o == nil || IsNil(o.SourceUrl) {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarksPostRequestAllOfOneOf1) GetSourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUrl) {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *BookmarksPostRequestAllOfOneOf1) HasSourceUrl() bool {
	if o != nil && !IsNil(o.SourceUrl) {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *BookmarksPostRequestAllOfOneOf1) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

func (o BookmarksPostRequestAllOfOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarksPostRequestAllOfOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["text"] = o.Text
	if !IsNil(o.SourceUrl) {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	return toSerialize, nil
}

func (o *BookmarksPostRequestAllOfOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookmarksPostRequestAllOfOneOf1 := _BookmarksPostRequestAllOfOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookmarksPostRequestAllOfOneOf1)

	if err != nil {
		return err
	}

	*o = BookmarksPostRequestAllOfOneOf1(varBookmarksPostRequestAllOfOneOf1)

	return err
}

type NullableBookmarksPostRequestAllOfOneOf1 struct {
	value *BookmarksPostRequestAllOfOneOf1
	isSet bool
}

func (v NullableBookmarksPostRequestAllOfOneOf1) Get() *BookmarksPostRequestAllOfOneOf1 {
	return v.value
}

func (v *NullableBookmarksPostRequestAllOfOneOf1) Set(val *BookmarksPostRequestAllOfOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarksPostRequestAllOfOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarksPostRequestAllOfOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarksPostRequestAllOfOneOf1(val *BookmarksPostRequestAllOfOneOf1) *NullableBookmarksPostRequestAllOfOneOf1 {
	return &NullableBookmarksPostRequestAllOfOneOf1{value: val, isSet: true}
}

func (v NullableBookmarksPostRequestAllOfOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarksPostRequestAllOfOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


