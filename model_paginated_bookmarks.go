/*
Hoarder API

The API for the Hoarder app

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaginatedBookmarks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedBookmarks{}

// PaginatedBookmarks struct for PaginatedBookmarks
type PaginatedBookmarks struct {
	Bookmarks []Bookmark `json:"bookmarks"`
	NextCursor NullableString `json:"nextCursor"`
}

type _PaginatedBookmarks PaginatedBookmarks

// NewPaginatedBookmarks instantiates a new PaginatedBookmarks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedBookmarks(bookmarks []Bookmark, nextCursor NullableString) *PaginatedBookmarks {
	this := PaginatedBookmarks{}
	this.Bookmarks = bookmarks
	this.NextCursor = nextCursor
	return &this
}

// NewPaginatedBookmarksWithDefaults instantiates a new PaginatedBookmarks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedBookmarksWithDefaults() *PaginatedBookmarks {
	this := PaginatedBookmarks{}
	return &this
}

// GetBookmarks returns the Bookmarks field value
func (o *PaginatedBookmarks) GetBookmarks() []Bookmark {
	if o == nil {
		var ret []Bookmark
		return ret
	}

	return o.Bookmarks
}

// GetBookmarksOk returns a tuple with the Bookmarks field value
// and a boolean to check if the value has been set.
func (o *PaginatedBookmarks) GetBookmarksOk() ([]Bookmark, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bookmarks, true
}

// SetBookmarks sets field value
func (o *PaginatedBookmarks) SetBookmarks(v []Bookmark) {
	o.Bookmarks = v
}

// GetNextCursor returns the NextCursor field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PaginatedBookmarks) GetNextCursor() string {
	if o == nil || o.NextCursor.Get() == nil {
		var ret string
		return ret
	}

	return *o.NextCursor.Get()
}

// GetNextCursorOk returns a tuple with the NextCursor field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedBookmarks) GetNextCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextCursor.Get(), o.NextCursor.IsSet()
}

// SetNextCursor sets field value
func (o *PaginatedBookmarks) SetNextCursor(v string) {
	o.NextCursor.Set(&v)
}

func (o PaginatedBookmarks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedBookmarks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bookmarks"] = o.Bookmarks
	toSerialize["nextCursor"] = o.NextCursor.Get()
	return toSerialize, nil
}

func (o *PaginatedBookmarks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bookmarks",
		"nextCursor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaginatedBookmarks := _PaginatedBookmarks{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaginatedBookmarks)

	if err != nil {
		return err
	}

	*o = PaginatedBookmarks(varPaginatedBookmarks)

	return err
}

type NullablePaginatedBookmarks struct {
	value *PaginatedBookmarks
	isSet bool
}

func (v NullablePaginatedBookmarks) Get() *PaginatedBookmarks {
	return v.value
}

func (v *NullablePaginatedBookmarks) Set(val *PaginatedBookmarks) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedBookmarks) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedBookmarks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedBookmarks(val *PaginatedBookmarks) *NullablePaginatedBookmarks {
	return &NullablePaginatedBookmarks{value: val, isSet: true}
}

func (v NullablePaginatedBookmarks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedBookmarks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


